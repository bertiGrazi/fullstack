{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class ReactiveFormsComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.cadastroForm = this.formBuilder.group({\n      firstName: ['']\n    });\n  }\n  ngOnInit() {\n    throw new Error('Method not implemented.');\n  }\n  subimitForm() {\n    console.log(this.cadastroForm);\n  }\n  static #_ = this.ɵfac = function ReactiveFormsComponent_Factory(t) {\n    return new (t || ReactiveFormsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReactiveFormsComponent,\n    selectors: [[\"app-reactive-forms\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"firstName\"]],\n    template: function ReactiveFormsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ReactiveFormsComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.subimitForm();\n        });\n        i0.ɵɵelement(1, \"input\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        i0.ɵɵproperty(\"formGroup\", ctx.cadastroForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", (tmp_1_0 = ctx.cadastroForm.get(\"firstName\")) == null ? null : tmp_1_0.value, \"\\n\");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["ReactiveFormsComponent","constructor","formBuilder","cadastroForm","group","firstName","ngOnInit","Error","subimitForm","console","log","_","i0","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","ReactiveFormsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","ReactiveFormsComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","tmp_1_0","get","value"],"sources":["/Users/graziberti/Documents/GitHub/fullstack/reactive-forms/src/app/reactive-forms/reactive-forms.component.ts","/Users/graziberti/Documents/GitHub/fullstack/reactive-forms/src/app/reactive-forms/reactive-forms.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-reactive-forms',\n  templateUrl: './reactive-forms.component.html',\n  styleUrls: ['./reactive-forms.component.scss']\n})\nexport class ReactiveFormsComponent implements OnInit{\n\n  public cadastroForm: FormGroup = this.formBuilder.group({\n    firstName: ['']\n  })\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    throw new Error('Method not implemented.');\n  }\n\n  public subimitForm() {\n    console.log(this.cadastroForm);\n  }\n}\n","<form [formGroup]=\"cadastroForm\" (ngSubmit)=\"subimitForm()\">\n  <input type=\"text\" formControlName=\"firstName\">\n\n  {{cadastroForm.get('firstName')?.value}}\n</form>\n"],"mappings":";;AAQA,OAAM,MAAOA,sBAAsB;EAKjCC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAHxB,KAAAC,YAAY,GAAc,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACtDC,SAAS,EAAE,CAAC,EAAE;KACf,CAAC;EAC6C;EAE/CC,QAAQA,CAAA;IACN,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEOC,WAAWA,CAAA;IAChBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,YAAY,CAAC;EAChC;EAAC,QAAAQ,CAAA,G;qBAbUX,sBAAsB,EAAAY,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAtBhB,sBAAsB;IAAAiB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRnCX,EAAA,CAAAa,cAAA,cAA4D;QAA3Bb,EAAA,CAAAc,UAAA,sBAAAC,yDAAA;UAAA,OAAYH,GAAA,CAAAhB,WAAA,EAAa;QAAA,EAAC;QACzDI,EAAA,CAAAgB,SAAA,eAA+C;QAE/ChB,EAAA,CAAAiB,MAAA,GACF;QAAAjB,EAAA,CAAAkB,YAAA,EAAO;;;;QAJDlB,EAAA,CAAAmB,UAAA,cAAAP,GAAA,CAAArB,YAAA,CAA0B;QAG9BS,EAAA,CAAAoB,SAAA,GACF;QADEpB,EAAA,CAAAqB,kBAAA,OAAAC,OAAA,GAAAV,GAAA,CAAArB,YAAA,CAAAgC,GAAA,gCAAAD,OAAA,CAAAE,KAAA,OACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}